/* config.h.  Generated by configure.  */
/* config.h.in.  Generated from configure.ac by autoheader.  */

/* Determine the block size */
#define FS_STAT_BLOCK_SIZE (m_stat.f_frsize)

/* Type of block count member in stat struct */
#define FS_STAT_COUNT_TYPE fsblkcnt_t

/* Function to determine filesystem stats from fd */
#define FS_STAT_FD fstatvfs(fd, &m_stat) == 0

/* Function to determine filesystem stats from filename */
#define FS_STAT_FN statvfs(fn, &m_stat) == 0

/* Type of block size member in stat struct */
#define FS_STAT_SIZE_TYPE unsigned long

/* Type of second argument to statfs function */
#define FS_STAT_STRUCT struct statvfs

/* true if config.h was included */
#define HAVE_CONFIG_H 1

/* Define to 1 if you have the <dlfcn.h> header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you have the <inttypes.h> header file. */
#define HAVE_INTTYPES_H 1

/* Define to 1 if you have the <memory.h> header file. */
#define HAVE_MEMORY_H 1

/* defined if ncurses wide character support is available */
/* #undef HAVE_NCURSESW */

/* Define to 1 if you have the <stdint.h> header file. */
#define HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the <strings.h> header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the <sys/mount.h> header file. */
/* #undef HAVE_SYS_MOUNT_H */

/* Define to 1 if you have the <sys/param.h> header file. */
/* #undef HAVE_SYS_PARAM_H */

/* Define to 1 if you have the <sys/statfs.h> header file. */
#define HAVE_SYS_STATFS_H 1

/* Define to 1 if you have the <sys/statvfs.h> header file. */
#define HAVE_SYS_STATVFS_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#define HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <sys/vfs.h> header file. */
#define HAVE_SYS_VFS_H 1

/* Define to 1 if you have the <unistd.h> header file. */
#define HAVE_UNISTD_H 1

/* Name of package */
#define PACKAGE "rtorrent"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "jaris@ifi.uio.no"

/* Define to the full name of this package. */
#define PACKAGE_NAME "rtorrent"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "rtorrent 0.6.4"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "rtorrent"

/* Define to the version of this package. */
#define PACKAGE_VERSION "0.6.4-0.1"

/* enable ipv6 stuff */
/* #undef RAK_USE_INET6 */

/* Define to 1 if you have the ANSI C header files. */
#define STDC_HEADERS 1

/* Define this if the compiler supports the unused attribute */
#define SUPPORT_ATTRIBUTE_UNUSED 1

/* Http user agent */
#define USER_AGENT std::string(PACKAGE "/" VERSION "/") + torrent::version()

/* Use execinfo.h */
#define USE_EXECINFO 1

/* Enable extra debugging checks. */
/* #undef USE_EXTRA_DEBUG */

/* defined when we allow the use of fd_set's of any size */
#define USE_VARIABLE_FDSET 1

/* Version number of package */
#define VERSION "rT:0.6.4 l:0.1"

/* Number of bits in a file offset, on hosts where this is settable. */
#define _FILE_OFFSET_BITS 64

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Null-wrapper if unused attribute is unsupported */
#define __UNUSED __attribute__((unused))
